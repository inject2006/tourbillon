input {
    file {
        path => ['/home/dev/tourbillon/logs/crawler_manager.log', '/home/dev/tourbillon/logs/order_manager.log', '/home/dev/tourbillon/logs/web_api.log', '/home/dev/tourbillon/logs/alipay.log', '/home/dev/tourbillon/logs/misc_task.log', '/home/dev/tourbillon/logs/provider_api.log', '/home/dev/tourbillon/logs/flight_order_task.log', '/home/dev/tourbillon/logs/sub_order_task.log', '/home/dev/tourbillon/logs/check_ota_order_status_task.log']
        start_position => "beginning"
        sincedb_path => "/home/dev/tourbillon/logs/tourbillon.db"
        codec=>plain{charset=>"UTF-8"}
    }
}



filter {

    multiline {
        pattern => "^[^\[]"
        what => "previous"
    }


    grok {
        match => [
            "message", "\[%{DATA:source_log_time}\]\[%{DATA:log_app}\]\[%{DATA:log_level}\]\[%{DATA:sub_level}\]\[%{DATA:request_id}\]\[%{DATA:order_id}\]\[%{DATA:sub_order_id}\]\[%{DATA:frame_id_chain}\]\[%{DATA:ota_name}\]\[%{DATA:provider_channel}\]\[%{DATA:frame_name}\]\[%{DATA:proxy_pool}\]%{GREEDYDATA:log_msg}Traceback%{GREEDYDATA:traceback}"
        ]
    }

    if "_grokparsefailure" in [tags] {
        grok {
            match => [
            "message", "\[%{DATA:source_log_time}\]\[%{DATA:log_app}\]\[%{DATA:log_level}\]\[%{DATA:sub_level}\]\[%{DATA:request_id}\]\[%{DATA:order_id}\]\[%{DATA:sub_order_id}\]\[%{DATA:frame_id_chain}\]\[%{DATA:ota_name}\]\[%{DATA:provider_channel}\]\[%{DATA:frame_name}\]\[%{DATA:proxy_pool}\]%{GREEDYDATA:log_msg}"
                ]
            remove_tag => ["_grokparsefailure"]
        }
    }

    else {
        mutate {
            convert => {"traceback" => "string"}
        }
    }

    json {
        source => "log_msg"
        target => "json_log"
    }

    if "_jsonparsefailure" not in [tags] {
        mutate {
            remove_field => ["log_msg"]
        }
    }

    date {
	    match => ["source_log_time","yyyy-MM-dd HH:mm:ss,SSS"]
	    target => "log_time"
	    timezone => "Asia/Shanghai"
	    remove_field => ["source_log_time"]
    }

    mutate {
        add_field => {
            "hostname" => "tb-misc"
            "public_ip" => "42.159.92.19"
            "private_ip" => "10.0.12.6"
        }
    }

}


output {
    elasticsearch {
        hosts => ["10.0.12.13:9200"]
        index => "tourbillon_%{+YYYYMMdd}"
        user => "elastic"
        password => "bigsec.com"
    }
}
